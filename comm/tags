!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AR	Makefile	/^AR = ar rc$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -I..\/include -DDEBUG$/;"	m
DANGLING_CONTEXT	e4c.c	142;"	d	file:
DANGLING_CONTEXT	e4c.c	155;"	d	file:
DEFINE_SIGNAL_NAME	e4c.c	188;"	d	file:
DEFINE_SIGNAL_NAME_SIGALRM	e4c.c	193;"	d	file:
DEFINE_SIGNAL_NAME_SIGALRM	e4c.c	197;"	d	file:
DEFINE_SIGNAL_NAME_SIGBREAK	e4c.c	301;"	d	file:
DEFINE_SIGNAL_NAME_SIGBREAK	e4c.c	305;"	d	file:
DEFINE_SIGNAL_NAME_SIGCHLD	e4c.c	203;"	d	file:
DEFINE_SIGNAL_NAME_SIGCHLD	e4c.c	207;"	d	file:
DEFINE_SIGNAL_NAME_SIGHUP	e4c.c	271;"	d	file:
DEFINE_SIGNAL_NAME_SIGHUP	e4c.c	275;"	d	file:
DEFINE_SIGNAL_NAME_SIGKILL	e4c.c	257;"	d	file:
DEFINE_SIGNAL_NAME_SIGKILL	e4c.c	265;"	d	file:
DEFINE_SIGNAL_NAME_SIGPIPE	e4c.c	223;"	d	file:
DEFINE_SIGNAL_NAME_SIGPIPE	e4c.c	227;"	d	file:
DEFINE_SIGNAL_NAME_SIGQUIT	e4c.c	291;"	d	file:
DEFINE_SIGNAL_NAME_SIGQUIT	e4c.c	295;"	d	file:
DEFINE_SIGNAL_NAME_SIGSTOP	e4c.c	239;"	d	file:
DEFINE_SIGNAL_NAME_SIGSTOP	e4c.c	247;"	d	file:
DEFINE_SIGNAL_NAME_SIGTRAP	e4c.c	213;"	d	file:
DEFINE_SIGNAL_NAME_SIGTRAP	e4c.c	217;"	d	file:
DEFINE_SIGNAL_NAME_SIGUSR1	e4c.c	311;"	d	file:
DEFINE_SIGNAL_NAME_SIGUSR1	e4c.c	315;"	d	file:
DEFINE_SIGNAL_NAME_SIGUSR2	e4c.c	321;"	d	file:
DEFINE_SIGNAL_NAME_SIGUSR2	e4c.c	325;"	d	file:
DEFINE_SIGNAL_NAME_SIGXCPU	e4c.c	281;"	d	file:
DEFINE_SIGNAL_NAME_SIGXCPU	e4c.c	285;"	d	file:
DESC_ALREADY_BEGUN	e4c.c	120;"	d	file:
DESC_ALREADY_BEGUN	e4c.c	146;"	d	file:
DESC_CANNOT_REACQUIRE	e4c.c	91;"	d	file:
DESC_CANNOT_REPEAT	e4c.c	93;"	d	file:
DESC_CANNOT_RETRY	e4c.c	92;"	d	file:
DESC_CATCH_NULL	e4c.c	90;"	d	file:
DESC_INVALID_CONTEXT	e4c.c	97;"	d	file:
DESC_INVALID_FRAME	e4c.c	96;"	d	file:
DESC_INVALID_STATE	e4c.c	119;"	d	file:
DESC_INVALID_STATE	e4c.c	145;"	d	file:
DESC_LOCK_ERROR	e4c.c	123;"	d	file:
DESC_MALLOC_CONTEXT	e4c.c	89;"	d	file:
DESC_MALLOC_EXCEPTION	e4c.c	87;"	d	file:
DESC_MALLOC_FRAME	e4c.c	88;"	d	file:
DESC_NOT_BEGUN_YET	e4c.c	121;"	d	file:
DESC_NOT_BEGUN_YET	e4c.c	147;"	d	file:
DESC_NOT_ENDED	e4c.c	122;"	d	file:
DESC_NOT_ENDED	e4c.c	148;"	d	file:
DESC_NO_FRAMES_LEFT	e4c.c	95;"	d	file:
DESC_NO_MAPPING	e4c.c	98;"	d	file:
DESC_SIGERR_DEFAULT	e4c.c	100;"	d	file:
DESC_SIGERR_HANDLE	e4c.c	99;"	d	file:
DESC_SIGERR_IGNORE	e4c.c	101;"	d	file:
DESC_TOO_MANY_FRAMES	e4c.c	94;"	d	file:
DESC_UNLOCK_ERROR	e4c.c	124;"	d	file:
DbgPrint	comm.c	/^int DbgPrint(const char *format,...)$/;"	f	signature:(const char *format,...)
E4C_CONTEXT	e4c.c	118;"	d	file:
E4C_CONTEXT	e4c.c	144;"	d	file:
E4C_CONTINUE	e4c.c	63;"	d	file:
E4C_CONTINUE	e4c.c	65;"	d	file:
E4C_DEFINE_EXCEPTION	e4c.c	/^E4C_DEFINE_EXCEPTION(ContextAlreadyBegun,               DESC_ALREADY_BEGUN,                 ExceptionSystemFatalError);$/;"	p	file:
E4C_DEFINE_EXCEPTION	e4c.c	/^E4C_DEFINE_EXCEPTION(ContextHasNotBegunYet,             DESC_NOT_BEGUN_YET,                 ExceptionSystemFatalError);$/;"	p	file:
E4C_DEFINE_EXCEPTION	e4c.c	/^E4C_DEFINE_EXCEPTION(ContextNotEnded,                   DESC_NOT_ENDED,                     ExceptionSystemFatalError);$/;"	p	file:
E4C_DEFINE_EXCEPTION	e4c.c	/^E4C_DEFINE_EXCEPTION(ExceptionSystemFatalError,         DESC_INVALID_STATE,                 RuntimeException);$/;"	p	file:
E4C_INLINE	e4c.c	43;"	d	file:
E4C_INLINE	e4c.c	48;"	d	file:
E4C_INLINE	e4c.c	51;"	d	file:
E4C_INLINE	e4c.c	54;"	d	file:
E4C_SIGNAL_MAPPING_SIGALRM	e4c.c	195;"	d	file:
E4C_SIGNAL_MAPPING_SIGALRM	e4c.c	199;"	d	file:
E4C_SIGNAL_MAPPING_SIGBREAK	e4c.c	303;"	d	file:
E4C_SIGNAL_MAPPING_SIGBREAK	e4c.c	307;"	d	file:
E4C_SIGNAL_MAPPING_SIGCHLD	e4c.c	205;"	d	file:
E4C_SIGNAL_MAPPING_SIGCHLD	e4c.c	209;"	d	file:
E4C_SIGNAL_MAPPING_SIGHUP	e4c.c	273;"	d	file:
E4C_SIGNAL_MAPPING_SIGHUP	e4c.c	277;"	d	file:
E4C_SIGNAL_MAPPING_SIGKILL	e4c.c	260;"	d	file:
E4C_SIGNAL_MAPPING_SIGKILL	e4c.c	262;"	d	file:
E4C_SIGNAL_MAPPING_SIGKILL	e4c.c	267;"	d	file:
E4C_SIGNAL_MAPPING_SIGPIPE	e4c.c	225;"	d	file:
E4C_SIGNAL_MAPPING_SIGPIPE	e4c.c	229;"	d	file:
E4C_SIGNAL_MAPPING_SIGQUIT	e4c.c	293;"	d	file:
E4C_SIGNAL_MAPPING_SIGQUIT	e4c.c	297;"	d	file:
E4C_SIGNAL_MAPPING_SIGSTOP	e4c.c	242;"	d	file:
E4C_SIGNAL_MAPPING_SIGSTOP	e4c.c	244;"	d	file:
E4C_SIGNAL_MAPPING_SIGSTOP	e4c.c	249;"	d	file:
E4C_SIGNAL_MAPPING_SIGTRAP	e4c.c	215;"	d	file:
E4C_SIGNAL_MAPPING_SIGTRAP	e4c.c	219;"	d	file:
E4C_SIGNAL_MAPPING_SIGUSR1	e4c.c	313;"	d	file:
E4C_SIGNAL_MAPPING_SIGUSR1	e4c.c	317;"	d	file:
E4C_SIGNAL_MAPPING_SIGUSR2	e4c.c	323;"	d	file:
E4C_SIGNAL_MAPPING_SIGUSR2	e4c.c	327;"	d	file:
E4C_SIGNAL_MAPPING_SIGXCPU	e4c.c	283;"	d	file:
E4C_SIGNAL_MAPPING_SIGXCPU	e4c.c	287;"	d	file:
FOREACH	e4c.c	75;"	d	file:
INITIALIZE_ONCE	e4c.c	73;"	d	file:
INTERNAL_ERROR	e4c.c	161;"	d	file:
IS_TOP_FRAME	e4c.c	69;"	d	file:
IS_UNCATCHABLE	e4c.c	71;"	d	file:
LIB	Makefile	/^LIB = ..\/lib\/libcomm.a$/;"	m
MEMORY_ERROR	e4c.c	164;"	d	file:
MISUSE_ERROR	e4c.c	158;"	d	file:
MSG_AT_EXIT_ERROR	e4c.c	126;"	d	file:
MSG_AT_EXIT_ERROR	e4c.c	150;"	d	file:
MSG_FATAL_ERROR	e4c.c	125;"	d	file:
MSG_FATAL_ERROR	e4c.c	149;"	d	file:
MUTEX_DEFINE	e4c.c	132;"	d	file:
MUTEX_DEFINE	e4c.c	151;"	d	file:
MUTEX_LOCK	e4c.c	133;"	d	file:
MUTEX_LOCK	e4c.c	152;"	d	file:
MUTEX_UNLOCK	e4c.c	137;"	d	file:
MUTEX_UNLOCK	e4c.c	153;"	d	file:
OBJ	Makefile	/^OBJ = comm.o cJSON.o e4c.o$/;"	m
PREVENT_FUNC	e4c.c	168;"	d	file:
PREVENT_FUNC	e4c.c	179;"	d	file:
PREVENT_PROC	e4c.c	173;"	d	file:
PREVENT_PROC	e4c.c	180;"	d	file:
PTHREAD_CANCELED	e4c.c	116;"	d	file:
RM	Makefile	/^RM = rm -f$/;"	m
SIGABRT	e4c.c	/^DEFINE_SIGNAL_NAME(SIGABRT);$/;"	v
SIGFPE	e4c.c	/^DEFINE_SIGNAL_NAME(SIGFPE);$/;"	v
SIGILL	e4c.c	/^DEFINE_SIGNAL_NAME(SIGILL);$/;"	v
SIGINT	e4c.c	/^DEFINE_SIGNAL_NAME(SIGINT);$/;"	v
SIGSEGV	e4c.c	/^DEFINE_SIGNAL_NAME(SIGSEGV);$/;"	v
SIGTERM	e4c.c	/^DEFINE_SIGNAL_NAME(SIGTERM);$/;"	v
SRC	Makefile	/^SRC = comm.c cJSON.c e4c.c$/;"	m
STOP_EXECUTION	e4c.c	141;"	d	file:
STOP_EXECUTION	e4c.c	154;"	d	file:
THREAD_CANCEL_CURRENT	e4c.c	130;"	d	file:
THREAD_CURRENT	e4c.c	128;"	d	file:
THREAD_EXIT	e4c.c	131;"	d	file:
THREAD_SAME	e4c.c	129;"	d	file:
THREAD_TYPE	e4c.c	127;"	d	file:
VERBATIM_COPY	e4c.c	82;"	d	file:
VERBATIM_COPY	e4c.c	84;"	d	file:
WHEN_SIGNAL	e4c.c	183;"	d	file:
WHEN_SIGNAL_SIGALRM	e4c.c	194;"	d	file:
WHEN_SIGNAL_SIGALRM	e4c.c	198;"	d	file:
WHEN_SIGNAL_SIGBREAK	e4c.c	302;"	d	file:
WHEN_SIGNAL_SIGBREAK	e4c.c	306;"	d	file:
WHEN_SIGNAL_SIGCHLD	e4c.c	204;"	d	file:
WHEN_SIGNAL_SIGCHLD	e4c.c	208;"	d	file:
WHEN_SIGNAL_SIGHUP	e4c.c	272;"	d	file:
WHEN_SIGNAL_SIGHUP	e4c.c	276;"	d	file:
WHEN_SIGNAL_SIGKILL	e4c.c	258;"	d	file:
WHEN_SIGNAL_SIGKILL	e4c.c	266;"	d	file:
WHEN_SIGNAL_SIGPIPE	e4c.c	224;"	d	file:
WHEN_SIGNAL_SIGPIPE	e4c.c	228;"	d	file:
WHEN_SIGNAL_SIGQUIT	e4c.c	292;"	d	file:
WHEN_SIGNAL_SIGQUIT	e4c.c	296;"	d	file:
WHEN_SIGNAL_SIGSTOP	e4c.c	240;"	d	file:
WHEN_SIGNAL_SIGSTOP	e4c.c	248;"	d	file:
WHEN_SIGNAL_SIGTRAP	e4c.c	214;"	d	file:
WHEN_SIGNAL_SIGTRAP	e4c.c	218;"	d	file:
WHEN_SIGNAL_SIGUSR1	e4c.c	312;"	d	file:
WHEN_SIGNAL_SIGUSR1	e4c.c	316;"	d	file:
WHEN_SIGNAL_SIGUSR2	e4c.c	322;"	d	file:
WHEN_SIGNAL_SIGUSR2	e4c.c	326;"	d	file:
WHEN_SIGNAL_SIGXCPU	e4c.c	282;"	d	file:
WHEN_SIGNAL_SIGXCPU	e4c.c	286;"	d	file:
_CRT_SECURE_NO_WARNINGS	cJSON.c	25;"	d	file:
_e4c_context_at_uncaught_exception	e4c.c	/^_e4c_context_at_uncaught_exception($/;"	p	file:	signature:( e4c_context * context, const e4c_exception * exception )
_e4c_context_at_uncaught_exception	e4c.c	/^static void _e4c_context_at_uncaught_exception(e4c_context * context, const e4c_exception * exception){$/;"	f	file:	signature:(e4c_context * context, const e4c_exception * exception)
_e4c_context_get_current	e4c.c	/^_e4c_context_get_current($/;"	p	file:	signature:( void )
_e4c_context_get_current	e4c.c	/^static E4C_INLINE e4c_context * _e4c_context_get_current(void){$/;"	f	file:	signature:(void)
_e4c_context_initialize	e4c.c	/^_e4c_context_initialize($/;"	p	file:	signature:( e4c_context * context, e4c_uncaught_handler uncaught_handler )
_e4c_context_initialize	e4c.c	/^static E4C_INLINE void _e4c_context_initialize(e4c_context * context, e4c_uncaught_handler uncaught_handler){$/;"	f	file:	signature:(e4c_context * context, e4c_uncaught_handler uncaught_handler)
_e4c_context_propagate	e4c.c	/^static void _e4c_context_propagate(e4c_context * context, e4c_exception * exception){$/;"	f	file:	signature:(e4c_context * context, e4c_exception * exception)
_e4c_context_set_signal_handlers	e4c.c	/^_e4c_context_set_signal_handlers($/;"	p	file:	signature:( e4c_context * context, const e4c_signal_mapping * mappings )
_e4c_context_set_signal_handlers	e4c.c	/^static void _e4c_context_set_signal_handlers(e4c_context * context, const e4c_signal_mapping * mappings){$/;"	f	file:	signature:(e4c_context * context, const e4c_signal_mapping * mappings)
_e4c_environment_add	e4c.c	/^_e4c_environment_add($/;"	p	file:	signature:( e4c_environment * environment )
_e4c_environment_add	e4c.c	/^static E4C_INLINE void _e4c_environment_add(e4c_environment * environment){$/;"	f	file:	signature:(e4c_environment * environment)
_e4c_environment_allocate	e4c.c	/^_e4c_environment_allocate($/;"	p	file:	signature:( int line, const char * function )
_e4c_environment_allocate	e4c.c	/^static E4C_INLINE e4c_environment * _e4c_environment_allocate(int line, const char * function){$/;"	f	file:	signature:(int line, const char * function)
_e4c_environment_deallocate	e4c.c	/^_e4c_environment_deallocate($/;"	p	file:	signature:( e4c_environment * environment )
_e4c_environment_deallocate	e4c.c	/^static E4C_INLINE void _e4c_environment_deallocate(e4c_environment * environment){$/;"	f	file:	signature:(e4c_environment * environment)
_e4c_environment_get_current	e4c.c	/^_e4c_environment_get_current($/;"	p	file:	signature:( void )
_e4c_environment_get_current	e4c.c	/^static e4c_environment * _e4c_environment_get_current(void){$/;"	f	file:	signature:(void)
_e4c_environment_initialize	e4c.c	/^_e4c_environment_initialize($/;"	p	file:	signature:( e4c_environment * environment, e4c_uncaught_handler uncaught_handler )
_e4c_environment_initialize	e4c.c	/^static void _e4c_environment_initialize(e4c_environment * environment, e4c_uncaught_handler uncaught_handler){$/;"	f	file:	signature:(e4c_environment * environment, e4c_uncaught_handler uncaught_handler)
_e4c_environment_remove	e4c.c	/^_e4c_environment_remove($/;"	p	file:	signature:( void )
_e4c_environment_remove	e4c.c	/^static e4c_environment * _e4c_environment_remove(void){$/;"	f	file:	signature:(void)
_e4c_exception_allocate	e4c.c	/^_e4c_exception_allocate($/;"	p	file:	signature:( int line, const char * function )
_e4c_exception_allocate	e4c.c	/^static E4C_INLINE e4c_exception * _e4c_exception_allocate(int line, const char * function){$/;"	f	file:	signature:(int line, const char * function)
_e4c_exception_deallocate	e4c.c	/^_e4c_exception_deallocate($/;"	p	file:	signature:( e4c_exception * exception, e4c_finalize_handler finalize_handler )
_e4c_exception_deallocate	e4c.c	/^static E4C_INLINE void _e4c_exception_deallocate(e4c_exception * exception, e4c_finalize_handler finalize_handler){$/;"	f	file:	signature:(e4c_exception * exception, e4c_finalize_handler finalize_handler)
_e4c_exception_initialize	e4c.c	/^_e4c_exception_initialize($/;"	p	file:	signature:( e4c_exception * exception, const e4c_exception_type * exception_type, E4C_BOOL set_message, const char * message, const char * file, int line, const char * function, int error_number )
_e4c_exception_initialize	e4c.c	/^static E4C_INLINE void _e4c_exception_initialize(e4c_exception * exception, const e4c_exception_type * exception_type, E4C_BOOL set_message, const char * message, const char * file, int line, const char * function, int error_number){$/;"	f	file:	signature:(e4c_exception * exception, const e4c_exception_type * exception_type, E4C_BOOL set_message, const char * message, const char * file, int line, const char * function, int error_number)
_e4c_exception_set_cause	e4c.c	/^_e4c_exception_set_cause($/;"	p	file:	signature:( e4c_exception * exception, e4c_exception * cause )
_e4c_exception_set_cause	e4c.c	/^static E4C_INLINE void _e4c_exception_set_cause(e4c_exception * exception, e4c_exception * cause){$/;"	f	file:	signature:(e4c_exception * exception, e4c_exception * cause)
_e4c_exception_throw	e4c.c	/^_e4c_exception_throw($/;"	p	file:	signature:( e4c_frame * frame, const e4c_exception_type * exception_type, const char * file, int line, const char * function, int error_number, E4C_BOOL set_message, const char * message )
_e4c_exception_throw	e4c.c	/^static E4C_INLINE e4c_exception * _e4c_exception_throw(e4c_frame * frame, const e4c_exception_type * exception_type, const char * file, int line, const char * function, int error_number, E4C_BOOL set_message, const char * message){$/;"	f	file:	signature:(e4c_frame * frame, const e4c_exception_type * exception_type, const char * file, int line, const char * function, int error_number, E4C_BOOL set_message, const char * message)
_e4c_exception_type_extends	e4c.c	/^_e4c_exception_type_extends($/;"	p	file:	signature:( const e4c_exception_type * child, const e4c_exception_type * parent )
_e4c_exception_type_extends	e4c.c	/^static E4C_INLINE E4C_BOOL _e4c_exception_type_extends(const e4c_exception_type * child, const e4c_exception_type * parent){$/;"	f	file:	signature:(const e4c_exception_type * child, const e4c_exception_type * parent)
_e4c_frame_allocate	e4c.c	/^_e4c_frame_allocate($/;"	p	file:	signature:( int line, const char * function )
_e4c_frame_allocate	e4c.c	/^static E4C_INLINE e4c_frame * _e4c_frame_allocate(int line, const char * function){$/;"	f	file:	signature:(int line, const char * function)
_e4c_frame_deallocate	e4c.c	/^_e4c_frame_deallocate($/;"	p	file:	signature:( e4c_frame * frame, e4c_finalize_handler finalize_handler )
_e4c_frame_deallocate	e4c.c	/^static E4C_INLINE void _e4c_frame_deallocate(e4c_frame * frame, e4c_finalize_handler finalize_handler){$/;"	f	file:	signature:(e4c_frame * frame, e4c_finalize_handler finalize_handler)
_e4c_frame_initialize	e4c.c	/^_e4c_frame_initialize($/;"	p	file:	signature:( e4c_frame * frame, e4c_frame * previous, e4c_frame_stage stage )
_e4c_frame_initialize	e4c.c	/^static E4C_INLINE void _e4c_frame_initialize(e4c_frame * frame, e4c_frame * previous, e4c_frame_stage stage){$/;"	f	file:	signature:(e4c_frame * frame, e4c_frame * previous, e4c_frame_stage stage)
_e4c_library_fatal_error	e4c.c	/^static E4C_INLINE void _e4c_library_fatal_error(const e4c_exception_type * exception_type, const char * message, const char * file, int line, const char * function, int error_number){$/;"	f	file:	signature:(const e4c_exception_type * exception_type, const char * message, const char * file, int line, const char * function, int error_number)
_e4c_library_finalize	e4c.c	/^_e4c_library_finalize($/;"	p	file:	signature:( void )
_e4c_library_finalize	e4c.c	/^static void _e4c_library_finalize(void){$/;"	f	file:	signature:(void)
_e4c_library_handle_signal	e4c.c	/^_e4c_library_handle_signal($/;"	p	file:	signature:( int signal_number )
_e4c_library_handle_signal	e4c.c	/^static void _e4c_library_handle_signal(int signal_number){$/;"	f	file:	signature:(int signal_number)
_e4c_library_initialize	e4c.c	/^_e4c_library_initialize($/;"	p	file:	signature:( void )
_e4c_library_initialize	e4c.c	/^static void _e4c_library_initialize(void){$/;"	f	file:	signature:(void)
_e4c_print_exception	e4c.c	/^_e4c_print_exception($/;"	p	file:	signature:( const e4c_exception * exception )
_e4c_print_exception	e4c.c	/^static void _e4c_print_exception(const e4c_exception * exception){$/;"	f	file:	signature:(const e4c_exception * exception)
_e4c_print_exception_type	e4c.c	/^_e4c_print_exception_type($/;"	p	file:	signature:( const e4c_exception_type * exception_type )
_e4c_print_exception_type	e4c.c	/^static E4C_INLINE void _e4c_print_exception_type(const e4c_exception_type * exception_type){$/;"	f	file:	signature:(const e4c_exception_type * exception_type)
_e4c_print_exception_type_node	e4c.c	/^_e4c_print_exception_type_node($/;"	p	file:	signature:( const e4c_exception_type * exception_type )
_e4c_print_exception_type_node	e4c.c	/^static E4C_INLINE int _e4c_print_exception_type_node(const e4c_exception_type * exception_type){$/;"	f	file:	signature:(const e4c_exception_type * exception_type)
cJSON_AddItemReferenceToArray	cJSON.c	/^void	cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)						{cJSON_AddItemToArray(array,create_reference(item));}$/;"	f	signature:(cJSON *array, cJSON *item)
cJSON_AddItemReferenceToObject	cJSON.c	/^void	cJSON_AddItemReferenceToObject(cJSON *object,const char *string,cJSON *item)	{cJSON_AddItemToObject(object,string,create_reference(item));}$/;"	f	signature:(cJSON *object,const char *string,cJSON *item)
cJSON_AddItemToArray	cJSON.c	/^void   cJSON_AddItemToArray(cJSON *array, cJSON *item)						{cJSON *c=array->child;if (!item) return; if (!c) {array->child=item;} else {while (c && c->next) c=c->next; suffix_object(c,item);}}$/;"	f	signature:(cJSON *array, cJSON *item)
cJSON_AddItemToObject	cJSON.c	/^void   cJSON_AddItemToObject(cJSON *object,const char *string,cJSON *item)	{if (!item) return; if (item->string) cJSON_free(item->string);item->string=cJSON_strdup(string);cJSON_AddItemToArray(object,item);}$/;"	f	signature:(cJSON *object,const char *string,cJSON *item)
cJSON_CreateArray	cJSON.c	/^cJSON *cJSON_CreateArray(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_Array;return item;}$/;"	f	signature:(void)
cJSON_CreateBool	cJSON.c	/^cJSON *cJSON_CreateBool(int b)					{cJSON *item=cJSON_New_Item();if(item)item->type=b?cJSON_True:cJSON_False;return item;}$/;"	f	signature:(int b)
cJSON_CreateDoubleArray	cJSON.c	/^cJSON *cJSON_CreateDoubleArray(const double *numbers,int count)	{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f	signature:(const double *numbers,int count)
cJSON_CreateFalse	cJSON.c	/^cJSON *cJSON_CreateFalse(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_False;return item;}$/;"	f	signature:(void)
cJSON_CreateFloatArray	cJSON.c	/^cJSON *cJSON_CreateFloatArray(const float *numbers,int count)	{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f	signature:(const float *numbers,int count)
cJSON_CreateIntArray	cJSON.c	/^cJSON *cJSON_CreateIntArray(const int *numbers,int count)		{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f	signature:(const int *numbers,int count)
cJSON_CreateNull	cJSON.c	/^cJSON *cJSON_CreateNull(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_NULL;return item;}$/;"	f	signature:(void)
cJSON_CreateNumber	cJSON.c	/^cJSON *cJSON_CreateNumber(double num)			{cJSON *item=cJSON_New_Item();if(item){item->type=cJSON_Number;item->valuedouble=num;item->valueint=(int)num;}return item;}$/;"	f	signature:(double num)
cJSON_CreateObject	cJSON.c	/^cJSON *cJSON_CreateObject(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_Object;return item;}$/;"	f	signature:(void)
cJSON_CreateString	cJSON.c	/^cJSON *cJSON_CreateString(const char *string)	{cJSON *item=cJSON_New_Item();if(item){item->type=cJSON_String;item->valuestring=cJSON_strdup(string);}return item;}$/;"	f	signature:(const char *string)
cJSON_CreateStringArray	cJSON.c	/^cJSON *cJSON_CreateStringArray(const char **strings,int count)	{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateString(strings[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f	signature:(const char **strings,int count)
cJSON_CreateTrue	cJSON.c	/^cJSON *cJSON_CreateTrue(void)					{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_True;return item;}$/;"	f	signature:(void)
cJSON_Delete	cJSON.c	/^void cJSON_Delete(cJSON *c)$/;"	f	signature:(cJSON *c)
cJSON_DeleteItemFromArray	cJSON.c	/^void   cJSON_DeleteItemFromArray(cJSON *array,int which)			{cJSON_Delete(cJSON_DetachItemFromArray(array,which));}$/;"	f	signature:(cJSON *array,int which)
cJSON_DeleteItemFromObject	cJSON.c	/^void   cJSON_DeleteItemFromObject(cJSON *object,const char *string) {cJSON_Delete(cJSON_DetachItemFromObject(object,string));}$/;"	f	signature:(cJSON *object,const char *string)
cJSON_DetachItemFromArray	cJSON.c	/^cJSON *cJSON_DetachItemFromArray(cJSON *array,int which)			{cJSON *c=array->child;while (c && which>0) c=c->next,which--;if (!c) return 0;$/;"	f	signature:(cJSON *array,int which)
cJSON_DetachItemFromObject	cJSON.c	/^cJSON *cJSON_DetachItemFromObject(cJSON *object,const char *string) {int i=0;cJSON *c=object->child;while (c && cJSON_strcasecmp(c->string,string)) i++,c=c->next;if (c) return cJSON_DetachItemFromArray(object,i);return 0;}$/;"	f	signature:(cJSON *object,const char *string)
cJSON_Duplicate	cJSON.c	/^cJSON *cJSON_Duplicate(cJSON *item,int recurse)$/;"	f	signature:(cJSON *item,int recurse)
cJSON_GetArrayItem	cJSON.c	/^cJSON *cJSON_GetArrayItem(cJSON *array,int item)				{cJSON *c=array->child;  while (c && item>0) item--,c=c->next; return c;}$/;"	f	signature:(cJSON *array,int item)
cJSON_GetArraySize	cJSON.c	/^int    cJSON_GetArraySize(cJSON *array)							{cJSON *c=array->child;int i=0;while(c)i++,c=c->next;return i;}$/;"	f	signature:(cJSON *array)
cJSON_GetErrorPtr	cJSON.c	/^const char *cJSON_GetErrorPtr(void) {return ep;}$/;"	f	signature:(void)
cJSON_GetObjectItem	cJSON.c	/^cJSON *cJSON_GetObjectItem(cJSON *object,const char *string)	{cJSON *c=object->child; while (c && cJSON_strcasecmp(c->string,string)) c=c->next; return c;}$/;"	f	signature:(cJSON *object,const char *string)
cJSON_InitHooks	cJSON.c	/^void cJSON_InitHooks(cJSON_Hooks* hooks)$/;"	f	signature:(cJSON_Hooks* hooks)
cJSON_Minify	cJSON.c	/^void cJSON_Minify(char *json)$/;"	f	signature:(char *json)
cJSON_New_Item	cJSON.c	/^static cJSON *cJSON_New_Item(void)$/;"	f	file:	signature:(void)
cJSON_Parse	cJSON.c	/^cJSON *cJSON_Parse(const char *value) {return cJSON_ParseWithOpts(value,0,0);}$/;"	f	signature:(const char *value)
cJSON_ParseWithOpts	cJSON.c	/^cJSON *cJSON_ParseWithOpts(const char *value,const char **return_parse_end,int require_null_terminated)$/;"	f	signature:(const char *value,const char **return_parse_end,int require_null_terminated)
cJSON_Print	cJSON.c	/^char *cJSON_Print(cJSON *item)				{return print_value(item,0,1);}$/;"	f	signature:(cJSON *item)
cJSON_PrintUnformatted	cJSON.c	/^char *cJSON_PrintUnformatted(cJSON *item)	{return print_value(item,0,0);}$/;"	f	signature:(cJSON *item)
cJSON_ReplaceItemInArray	cJSON.c	/^void   cJSON_ReplaceItemInArray(cJSON *array,int which,cJSON *newitem)		{cJSON *c=array->child;while (c && which>0) c=c->next,which--;if (!c) return;$/;"	f	signature:(cJSON *array,int which,cJSON *newitem)
cJSON_ReplaceItemInObject	cJSON.c	/^void   cJSON_ReplaceItemInObject(cJSON *object,const char *string,cJSON *newitem){int i=0;cJSON *c=object->child;while(c && cJSON_strcasecmp(c->string,string))i++,c=c->next;if(c){newitem->string=cJSON_strdup(string);cJSON_ReplaceItemInArray(object,i,newitem);}}$/;"	f	signature:(cJSON *object,const char *string,cJSON *newitem)
cJSON_free	cJSON.c	/^static void (*cJSON_free)(void *ptr) = free;$/;"	v	file:
cJSON_malloc	cJSON.c	/^static void *(*cJSON_malloc)(size_t sz) = malloc;$/;"	v	file:
cJSON_strcasecmp	cJSON.c	/^static int cJSON_strcasecmp(const char *s1,const char *s2)$/;"	f	file:	signature:(const char *s1,const char *s2)
cJSON_strdup	cJSON.c	/^static char* cJSON_strdup(const char* str)$/;"	f	file:	signature:(const char* str)
command_control	comm.c	/^int command_control(COMMAND cmd)$/;"	f	signature:(COMMAND cmd)
context	e4c.c	/^    e4c_context                 context;$/;"	m	struct:e4c_environment_	file:	access:public
continuation	e4c.c	/^    e4c_continuation            continuation;$/;"	m	struct:e4c_frame_	file:	access:public
create_reference	cJSON.c	/^static cJSON *create_reference(cJSON *item) {cJSON *ref=cJSON_New_Item();if (!ref) return 0;memcpy(ref,item,sizeof(cJSON));ref->string=0;ref->type|=cJSON_IsReference;ref->next=ref->prev=0;return ref;}$/;"	f	file:	signature:(cJSON *item)
current_frame	e4c.c	/^    e4c_frame *                 current_frame;$/;"	m	struct:e4c_context_	file:	access:public
custom_data	e4c.c	/^    void *                      custom_data;$/;"	m	struct:e4c_context_	file:	access:public
e4c_context	e4c.c	/^typedef struct e4c_context_ e4c_context;$/;"	t	typeref:struct:e4c_context_	file:
e4c_context_	e4c.c	/^struct e4c_context_{$/;"	s	file:
e4c_context_::current_frame	e4c.c	/^    e4c_frame *                 current_frame;$/;"	m	struct:e4c_context_	file:	access:public
e4c_context_::custom_data	e4c.c	/^    void *                      custom_data;$/;"	m	struct:e4c_context_	file:	access:public
e4c_context_::finalize_handler	e4c.c	/^    e4c_finalize_handler        finalize_handler;$/;"	m	struct:e4c_context_	file:	access:public
e4c_context_::initialize_handler	e4c.c	/^    e4c_initialize_handler      initialize_handler;$/;"	m	struct:e4c_context_	file:	access:public
e4c_context_::signal_mappings	e4c.c	/^    const e4c_signal_mapping *  signal_mappings;$/;"	m	struct:e4c_context_	file:	access:public
e4c_context_::uncaught_handler	e4c.c	/^    e4c_uncaught_handler        uncaught_handler;$/;"	m	struct:e4c_context_	file:	access:public
e4c_context_begin	e4c.c	/^e4c_context_begin($/;"	p	file:	signature:( E4C_BOOL handle_signals )
e4c_context_begin	e4c.c	/^void e4c_context_begin(E4C_BOOL handle_signals){$/;"	f	signature:(E4C_BOOL handle_signals)
e4c_context_end	e4c.c	/^e4c_context_end($/;"	p	file:	signature:( void )
e4c_context_end	e4c.c	/^void e4c_context_end(void){$/;"	f	signature:(void)
e4c_context_get_signal_mappings	e4c.c	/^const e4c_signal_mapping * e4c_context_get_signal_mappings(void){$/;"	f	signature:(void)
e4c_context_get_signal_mappings	e4c.c	/^e4c_context_get_signal_mappings($/;"	p	file:	signature:( void )
e4c_context_is_ready	e4c.c	/^E4C_BOOL e4c_context_is_ready(void){$/;"	f	signature:(void)
e4c_context_is_ready	e4c.c	/^e4c_context_is_ready($/;"	p	file:	signature:( void )
e4c_context_set_handlers	e4c.c	/^e4c_context_set_handlers($/;"	p	file:	signature:( e4c_uncaught_handler uncaught_handler, void * custom_data, e4c_initialize_handler initialize_handler, e4c_finalize_handler finalize_handler )
e4c_context_set_handlers	e4c.c	/^void e4c_context_set_handlers(e4c_uncaught_handler uncaught_handler, void * custom_data, e4c_initialize_handler initialize_handler, e4c_finalize_handler finalize_handler){$/;"	f	signature:(e4c_uncaught_handler uncaught_handler, void * custom_data, e4c_initialize_handler initialize_handler, e4c_finalize_handler finalize_handler)
e4c_context_set_signal_mappings	e4c.c	/^e4c_context_set_signal_mappings($/;"	p	file:	signature:( const e4c_signal_mapping * mappings )
e4c_context_set_signal_mappings	e4c.c	/^void e4c_context_set_signal_mappings(const e4c_signal_mapping * mappings){$/;"	f	signature:(const e4c_signal_mapping * mappings)
e4c_continuation	e4c.c	/^typedef struct e4c_continuation_ e4c_continuation;$/;"	t	typeref:struct:e4c_continuation_	file:
e4c_default_signal_mappings	e4c.c	/^const e4c_signal_mapping * const e4c_default_signal_mappings = &e4c_default_signal_mappings_array[0];$/;"	v
e4c_default_signal_mappings_array	e4c.c	/^static const e4c_signal_mapping e4c_default_signal_mappings_array[] = {$/;"	v	file:
e4c_environment	e4c.c	/^typedef struct e4c_environment_ e4c_environment;$/;"	t	typeref:struct:e4c_environment_	file:
e4c_environment_	e4c.c	/^struct e4c_environment_{$/;"	s	file:
e4c_environment_::context	e4c.c	/^    e4c_context                 context;$/;"	m	struct:e4c_environment_	file:	access:public
e4c_environment_::next	e4c.c	/^    e4c_environment *           next;$/;"	m	struct:e4c_environment_	file:	access:public
e4c_environment_::self	e4c.c	/^    THREAD_TYPE                 self;$/;"	m	struct:e4c_environment_	file:	access:public
e4c_environment_collection	e4c.c	/^typedef struct e4c_environment_collection_ e4c_environment_collection;$/;"	t	typeref:struct:e4c_environment_collection_	file:
e4c_environment_collection_	e4c.c	/^struct e4c_environment_collection_{$/;"	s	file:
e4c_environment_collection_::first	e4c.c	/^    e4c_environment *           first;$/;"	m	struct:e4c_environment_collection_	file:	access:public
e4c_exception_throw_format_	e4c.c	/^void e4c_exception_throw_format_(const e4c_exception_type * exception_type, const char * file, int line, const char * function, const char * format, ...){$/;"	f	signature:(const e4c_exception_type * exception_type, const char * file, int line, const char * function, const char * format, ...)
e4c_exception_throw_verbatim_	e4c.c	/^void e4c_exception_throw_verbatim_(const e4c_exception_type * exception_type, const char * file, int line, const char * function, const char * message){$/;"	f	signature:(const e4c_exception_type * exception_type, const char * file, int line, const char * function, const char * message)
e4c_frame	e4c.c	/^typedef struct e4c_frame_ e4c_frame;$/;"	t	typeref:struct:e4c_frame_	file:
e4c_frame_	e4c.c	/^struct e4c_frame_{$/;"	s	file:
e4c_frame_::continuation	e4c.c	/^    e4c_continuation            continuation;$/;"	m	struct:e4c_frame_	file:	access:public
e4c_frame_::previous	e4c.c	/^    e4c_frame *                 previous;$/;"	m	struct:e4c_frame_	file:	access:public
e4c_frame_::reacquire_attempts	e4c.c	/^    int                         reacquire_attempts;$/;"	m	struct:e4c_frame_	file:	access:public
e4c_frame_::retry_attempts	e4c.c	/^    int                         retry_attempts;$/;"	m	struct:e4c_frame_	file:	access:public
e4c_frame_::stage	e4c.c	/^    e4c_frame_stage             stage;$/;"	m	struct:e4c_frame_	file:	access:public
e4c_frame_::thrown_exception	e4c.c	/^    e4c_exception *             thrown_exception;$/;"	m	struct:e4c_frame_	file:	access:public
e4c_frame_::uncaught	e4c.c	/^    E4C_BOOL                    uncaught;$/;"	m	struct:e4c_frame_	file:	access:public
e4c_frame_catch_	e4c.c	/^E4C_BOOL e4c_frame_catch_(const e4c_exception_type * exception_type, const char * file, int line, const char * function){$/;"	f	signature:(const e4c_exception_type * exception_type, const char * file, int line, const char * function)
e4c_frame_catch_	e4c.c	/^e4c_frame_catch_($/;"	p	file:	signature:( const e4c_exception_type * exception_type, const char * file, int line, const char * function )
e4c_frame_first_stage_	e4c.c	/^e4c_continuation * e4c_frame_first_stage_(e4c_frame_stage stage, const char * file, int line, const char * function){$/;"	f	signature:(e4c_frame_stage stage, const char * file, int line, const char * function)
e4c_frame_first_stage_	e4c.c	/^e4c_frame_first_stage_($/;"	p	file:	signature:( enum e4c_frame_stage_ stage, const char * file, int line, const char * function )
e4c_frame_get_stage_	e4c.c	/^e4c_frame_get_stage_($/;"	p	file:	signature:( const char * file, int line, const char * function )
e4c_frame_get_stage_	e4c.c	/^e4c_frame_stage e4c_frame_get_stage_(const char * file, int line, const char * function){$/;"	f	signature:(const char * file, int line, const char * function)
e4c_frame_next_stage_	e4c.c	/^E4C_BOOL e4c_frame_next_stage_(void){$/;"	f	signature:(void)
e4c_frame_next_stage_	e4c.c	/^e4c_frame_next_stage_($/;"	p	file:	signature:( void )
e4c_frame_repeat_	e4c.c	/^e4c_frame_repeat_($/;"	p	file:	signature:( int max_repeat_attempts, enum e4c_frame_stage_ stage, const char * file, int line, const char * function )
e4c_frame_repeat_	e4c.c	/^void e4c_frame_repeat_(int max_repeat_attempts, e4c_frame_stage stage, const char * file, int line, const char * function){$/;"	f	signature:(int max_repeat_attempts, e4c_frame_stage stage, const char * file, int line, const char * function)
e4c_frame_stage	e4c.c	/^typedef enum e4c_frame_stage_ e4c_frame_stage;$/;"	t	typeref:enum:e4c_frame_stage_	file:
e4c_get_exception	e4c.c	/^const e4c_exception * e4c_get_exception(void){$/;"	f	signature:(void)
e4c_get_exception	e4c.c	/^e4c_get_exception($/;"	p	file:	signature:( void )
e4c_get_status	e4c.c	/^e4c_get_status($/;"	p	file:	signature:( void )
e4c_get_status	e4c.c	/^e4c_status e4c_get_status(void){$/;"	f	signature:(void)
e4c_is_instance_of	e4c.c	/^E4C_BOOL e4c_is_instance_of(const e4c_exception * instance, const e4c_exception_type * exception_type){$/;"	f	signature:(const e4c_exception * instance, const e4c_exception_type * exception_type)
e4c_is_instance_of	e4c.c	/^e4c_is_instance_of($/;"	p	file:	signature:( const e4c_exception * instance, const e4c_exception_type * exception_type )
e4c_library_version	e4c.c	/^e4c_library_version($/;"	p	file:	signature:( void )
e4c_library_version	e4c.c	/^long e4c_library_version(void){$/;"	f	signature:(void)
e4c_print_exception	e4c.c	/^e4c_print_exception($/;"	p	file:	signature:( const e4c_exception * exception )
e4c_print_exception	e4c.c	/^void e4c_print_exception(const e4c_exception * exception){$/;"	f	signature:(const e4c_exception * exception)
e4c_print_exception_type	e4c.c	/^e4c_print_exception_type($/;"	p	file:	signature:( const e4c_exception_type * exception_type )
e4c_print_exception_type	e4c.c	/^void e4c_print_exception_type(const e4c_exception_type * exception_type){$/;"	f	signature:(const e4c_exception_type * exception_type)
environment_collection	e4c.c	/^environment_collection = { NULL };$/;"	v	file:
ep	cJSON.c	/^static const char *ep;$/;"	v	file:
fatal_error_flag	e4c.c	/^fatal_error_flag = E4C_FALSE;$/;"	v	file:
finalize_handler	e4c.c	/^    e4c_finalize_handler        finalize_handler;$/;"	m	struct:e4c_context_	file:	access:public
first	e4c.c	/^    e4c_environment *           first;$/;"	m	struct:e4c_environment_collection_	file:	access:public
firstByteMark	cJSON.c	/^static const unsigned char firstByteMark[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };$/;"	v	file:
initialize_handler	e4c.c	/^    e4c_initialize_handler      initialize_handler;$/;"	m	struct:e4c_context_	file:	access:public
is_finalized	e4c.c	/^is_finalized = E4C_FALSE;$/;"	v	file:
is_initialized	e4c.c	/^is_initialized = E4C_FALSE;$/;"	v	file:
next	e4c.c	/^    e4c_environment *           next;$/;"	m	struct:e4c_environment_	file:	access:public
parse_array	cJSON.c	/^static const char *parse_array(cJSON *item,const char *value)$/;"	f	file:	signature:(cJSON *item,const char *value)
parse_array	cJSON.c	/^static const char *parse_array(cJSON *item,const char *value);$/;"	p	file:	signature:(cJSON *item,const char *value)
parse_hex4	cJSON.c	/^static unsigned parse_hex4(const char *str)$/;"	f	file:	signature:(const char *str)
parse_number	cJSON.c	/^static const char *parse_number(cJSON *item,const char *num)$/;"	f	file:	signature:(cJSON *item,const char *num)
parse_object	cJSON.c	/^static const char *parse_object(cJSON *item,const char *value)$/;"	f	file:	signature:(cJSON *item,const char *value)
parse_object	cJSON.c	/^static const char *parse_object(cJSON *item,const char *value);$/;"	p	file:	signature:(cJSON *item,const char *value)
parse_string	cJSON.c	/^static const char *parse_string(cJSON *item,const char *str)$/;"	f	file:	signature:(cJSON *item,const char *str)
parse_value	cJSON.c	/^static const char *parse_value(cJSON *item,const char *value)$/;"	f	file:	signature:(cJSON *item,const char *value)
parse_value	cJSON.c	/^static const char *parse_value(cJSON *item,const char *value);$/;"	p	file:	signature:(cJSON *item,const char *value)
previous	e4c.c	/^    e4c_frame *                 previous;$/;"	m	struct:e4c_frame_	file:	access:public
print_array	cJSON.c	/^static char *print_array(cJSON *item,int depth,int fmt)$/;"	f	file:	signature:(cJSON *item,int depth,int fmt)
print_array	cJSON.c	/^static char *print_array(cJSON *item,int depth,int fmt);$/;"	p	file:	signature:(cJSON *item,int depth,int fmt)
print_number	cJSON.c	/^static char *print_number(cJSON *item)$/;"	f	file:	signature:(cJSON *item)
print_object	cJSON.c	/^static char *print_object(cJSON *item,int depth,int fmt)$/;"	f	file:	signature:(cJSON *item,int depth,int fmt)
print_object	cJSON.c	/^static char *print_object(cJSON *item,int depth,int fmt);$/;"	p	file:	signature:(cJSON *item,int depth,int fmt)
print_string	cJSON.c	/^static char *print_string(cJSON *item)	{return print_string_ptr(item->valuestring);}$/;"	f	file:	signature:(cJSON *item)
print_string_ptr	cJSON.c	/^static char *print_string_ptr(const char *str)$/;"	f	file:	signature:(const char *str)
print_value	cJSON.c	/^static char *print_value(cJSON *item,int depth,int fmt)$/;"	f	file:	signature:(cJSON *item,int depth,int fmt)
print_value	cJSON.c	/^static char *print_value(cJSON *item,int depth,int fmt);$/;"	p	file:	signature:(cJSON *item,int depth,int fmt)
pthread_cancel	e4c.c	110;"	d	file:
reacquire_attempts	e4c.c	/^    int                         reacquire_attempts;$/;"	m	struct:e4c_frame_	file:	access:public
ref_count	e4c.c	77;"	d	file:
retry_attempts	e4c.c	/^    int                         retry_attempts;$/;"	m	struct:e4c_frame_	file:	access:public
self	e4c.c	/^    THREAD_TYPE                 self;$/;"	m	struct:e4c_environment_	file:	access:public
signal_handler	e4c.c	/^typedef void (*signal_handler)(int);$/;"	t	file:
signal_mappings	e4c.c	/^    const e4c_signal_mapping *  signal_mappings;$/;"	m	struct:e4c_context_	file:	access:public
signal_name_UNKNOWN	e4c.c	/^signal_name_UNKNOWN = "{unknown signal}";$/;"	v	file:
skip	cJSON.c	/^static const char *skip(const char *in) {while (in && *in && (unsigned char)*in<=32) in++; return in;}$/;"	f	file:	signature:(const char *in)
stage	e4c.c	/^    e4c_frame_stage             stage;$/;"	m	struct:e4c_frame_	file:	access:public
suffix_object	cJSON.c	/^static void suffix_object(cJSON *prev,cJSON *item) {prev->next=item;item->prev=prev;}$/;"	f	file:	signature:(cJSON *prev,cJSON *item)
thrown_exception	e4c.c	/^    e4c_exception *             thrown_exception;$/;"	m	struct:e4c_frame_	file:	access:public
uncaught	e4c.c	/^    E4C_BOOL                    uncaught;$/;"	m	struct:e4c_frame_	file:	access:public
uncaught_handler	e4c.c	/^    e4c_uncaught_handler        uncaught_handler;$/;"	m	struct:e4c_context_	file:	access:public
