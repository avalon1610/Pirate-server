cmake_minimum_required(VERSION 2.6)
PROJECT(pirate)
#SET(CMAKE_C_FLAGS "-std=c99")
message(STATUS "checking compiler...")
if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    message(STATUS "build using gcc or g++")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -g")
endif()

SET(CMAKE_BUILD_TYPE Debug)
SET(PROJECT_ROOT_PATH "${CMAKE_SOURCE_DIR}/../")
SET(EXECUTABLE_OUTPUT_PATH "${PROJECT_ROOT_PATH}/bin/")
SET(LIBRARY_OUTPUT_PATH "${PROJECT_ROOT_PATH}/lib/")

INCLUDE_DIRECTORIES("${PROJECT_ROOT_PATH}/include/"
                    "${PROJECT_ROOT_PATH}/network/"
                    "${PROJECT_ROOT_PATH}/monitor/")
LINK_DIRECTORIES("${PROJECT_ROOT_PATH}/lib/")

FILE(GLOB SOURCE_COMM "${PROJECT_ROOT_PATH}/comm/*.c")
ADD_LIBRARY(comm STATIC ${SOURCE_COMM})

FILE(GLOB SOURCE_UI "${PROJECT_ROOT_PATH}/ui/*.c")
ADD_DEFINITIONS(-DUSE_WEBSOCKET)
ADD_LIBRARY(ui STATIC ${SOURCE_UI})

FILE(GLOB SOURCE_MONITOR_M "${PROJECT_ROOT_PATH}/monitor/*.c")
ADD_DEFINITIONS(-DPING_AS_LIB)
ADD_LIBRARY(monitor STATIC ${SOURCE_MONITOR_M})

FILE(GLOB SOURCE_NETWORK "${PROJECT_ROOT_PATH}/network/*.c")
ADD_LIBRARY(network STATIC ${SOURCE_NETWORK})

FILE(GLOB SOURCE_PROGRAM "${PROJECT_ROOT_PATH}/program/*.c")
ADD_EXECUTABLE(pirate ${SOURCE_PROGRAM})
TARGET_LINK_LIBRARIES(pirate zlog pthread ui network net comm m monitor)

